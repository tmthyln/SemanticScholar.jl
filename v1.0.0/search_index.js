var documenterSearchIndex = {"docs":
[{"location":"api_low_level/#Low-Level-API-(Direct-Mapping-to-Web-API)","page":"Low-Level API","title":"Low-Level API (Direct Mapping to Web API)","text":"","category":"section"},{"location":"api_low_level/","page":"Low-Level API","title":"Low-Level API","text":"Both the low- and high-level APIs start off with an instance of SemanticScholarConnection, which handles managing the request rate.","category":"page"},{"location":"api_low_level/","page":"Low-Level API","title":"Low-Level API","text":"julia> using SemanticScholar\n\njulia> s2c = SemanticScholarConnection()\nSemanticScholarConnection(Dates.DateTime[])\n","category":"page"},{"location":"api_low_level/","page":"Low-Level API","title":"Low-Level API","text":"This s2c struct is then passed to all of the functions to make requests to the Semantic Scholar API.","category":"page"},{"location":"api_low_level/#Paper-Related","page":"Low-Level API","title":"Paper Related","text":"","category":"section"},{"location":"api_low_level/","page":"Low-Level API","title":"Low-Level API","text":"SemanticScholar.paper_search\nSemanticScholar.paper_details\nSemanticScholar.paper_authors\nSemanticScholar.paper_citations\nSemanticScholar.paper_references","category":"page"},{"location":"api_low_level/#SemanticScholar.paper_search","page":"Low-Level API","title":"SemanticScholar.paper_search","text":"paper_search(s2c, query; fields=[\"title\"], limit=10, offset=0)\n\nMake a paper search request to the S2 API (equivalent to \"/paper/search\" endpoint). The query must be \"plaintext\" with no special search filters.\n\n\n\n\n\n","category":"function"},{"location":"api_low_level/#SemanticScholar.paper_details","page":"Low-Level API","title":"SemanticScholar.paper_details","text":"paper_details(s2c, paper_id; fields)\n\nMake a request for details about a paper to the S2 API (equivalent to \"/paper/{paper_id}\" endpoint).\n\n\n\n\n\n","category":"function"},{"location":"api_low_level/#SemanticScholar.paper_authors","page":"Low-Level API","title":"SemanticScholar.paper_authors","text":"paper_authors(s2c, paper_id; fields=[], offset=0, limit=500)\n\nMake a paper authors request to the S2 API (equivalent to \"/paper/{paper_id}/authors\" endpoint).\n\n\n\n\n\n","category":"function"},{"location":"api_low_level/#SemanticScholar.paper_citations","page":"Low-Level API","title":"SemanticScholar.paper_citations","text":"paper_citations(s2c, paper_id; fields=[], offset=0, limit=500)\n\nMake a paper citations request to the S2 API (equivalent to \"/paper/{paper_id}/citations\" endpoint).\n\n\n\n\n\n","category":"function"},{"location":"api_low_level/#SemanticScholar.paper_references","page":"Low-Level API","title":"SemanticScholar.paper_references","text":"paper_references(s2c, paper_id; fields=[], offset=0, limit=500)\n\nMake a paper references request to the S2 API (equivalent to \"/paper/{paper_id}/references\" endpoint).\n\n\n\n\n\n","category":"function"},{"location":"api_low_level/#Author-Related","page":"Low-Level API","title":"Author Related","text":"","category":"section"},{"location":"api_low_level/","page":"Low-Level API","title":"Low-Level API","text":"SemanticScholar.author_search\nSemanticScholar.author_details\nSemanticScholar.author_papers","category":"page"},{"location":"api_low_level/#SemanticScholar.author_search","page":"Low-Level API","title":"SemanticScholar.author_search","text":"author_search(s2c, query; fields=[\"title\"], limit=10, offset=0)\n\nMake an author search request to the S2 API (equivalent to \"/author/search\" endpoint).\n\n\n\n\n\n","category":"function"},{"location":"api_low_level/#SemanticScholar.author_details","page":"Low-Level API","title":"SemanticScholar.author_details","text":"author_details(s2c, author_id; fields)\n\nMake a request for author details to the S2 API (equivalent to \"/author/{author_id}\" endpoint).\n\n\n\n\n\n","category":"function"},{"location":"api_low_level/#SemanticScholar.author_papers","page":"Low-Level API","title":"SemanticScholar.author_papers","text":"author_papers(s2c, author_id; fields=[], offset=0, limit=500)\n\nMake an author papers request to the S2 API (equivalent to \"/author/{author_id}/papers\" endpoint).\n\n\n\n\n\n","category":"function"},{"location":"api_high_level/#High-Level-API","page":"High-Level API","title":"High-Level API","text":"","category":"section"},{"location":"api_high_level/","page":"High-Level API","title":"High-Level API","text":"Both the low- and high-level APIs start off with an instance of SemanticScholarConnection, which handles managing the request rate.","category":"page"},{"location":"api_high_level/","page":"High-Level API","title":"High-Level API","text":"julia> using SemanticScholar\n\njulia> s2c = SemanticScholarConnection()\nSemanticScholarConnection(Dates.DateTime[])\n","category":"page"},{"location":"api_high_level/","page":"High-Level API","title":"High-Level API","text":"This s2c struct is then passed to all of the functions to make requests to the Semantic Scholar API.","category":"page"},{"location":"api_high_level/#Paper-Related","page":"High-Level API","title":"Paper Related","text":"","category":"section"},{"location":"api_high_level/","page":"High-Level API","title":"High-Level API","text":"SemanticScholar.search_papers","category":"page"},{"location":"api_high_level/#SemanticScholar.search_papers","page":"High-Level API","title":"SemanticScholar.search_papers","text":"search_papers(s2c, query; limit=100)\n\nSearch the S2 Academic Graph for papers matching the search query.\n\nThis is a high-level API function, so it returns an array of Papers.\n\n\n\n\n\n","category":"function"},{"location":"api_high_level/#Author-Related","page":"High-Level API","title":"Author Related","text":"","category":"section"},{"location":"api_high_level/","page":"High-Level API","title":"High-Level API","text":"SemanticScholar.search_authors","category":"page"},{"location":"api_high_level/#SemanticScholar.search_authors","page":"High-Level API","title":"SemanticScholar.search_authors","text":"search_authors(s2c, query; limit=50)\n\nSearch the S2 Academic Graph for authors with names matching the search query.\n\nThis is a high-level API function, so it returns an array of Authors.\n\n\n\n\n\n","category":"function"},{"location":"#SemanticScholar.jl-Documentation","page":"Home","title":"SemanticScholar.jl Documentation","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"Semantic Scholar is an academic paper repository, which provides a convenient API. The default scholar is able to make about 100 requests/5 minutes. The SemanticScholar.jl package wraps the API to make it easier to access from Julia. There are 2 APIs that this package exposes (for accessing the academic graph, not the peer reviews):","category":"page"},{"location":"","page":"Home","title":"Home","text":"low-level API: basically direct Julia bindings to their web API\nhigh-level API: encapsulates more high-level logic into structs and functions that are not necessarily linked to their API structure (this can be slower, depending on your specific needs; more data tends to be asked for in this API)","category":"page"},{"location":"","page":"Home","title":"Home","text":"Suggestions or contributions welcome!","category":"page"},{"location":"#Getting-Started","page":"Home","title":"Getting Started","text":"","category":"section"},{"location":"","page":"Home","title":"Home","text":"You can install this package using Julia's default package manager:","category":"page"},{"location":"","page":"Home","title":"Home","text":"(env) pkg> add SemanticScholar","category":"page"},{"location":"","page":"Home","title":"Home","text":"or","category":"page"},{"location":"","page":"Home","title":"Home","text":"julia> using Pkg\n\njulia> Pkg.add(\"SemanticScholar)","category":"page"}]
}
